"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5844],{83287:function(e,t,n){n.d(t,{W:function(){return i}});var r=n(6475),s=n(54146);class i extends s.Z{constructor(e){let{chains:t=r.gL9,options:n}=e;super(),this.chains=t,this.options=n}getBlockExplorerUrls(e){let t=e.explorers?.map(e=>e.url)??[];return t.length>0?t:void 0}isChainUnsupported(e){return!this.chains.some(t=>t.chainId===e)}updateChains(e){this.chains=e}}},50610:function(e,t,n){n.d(t,{A:function(){return i},C:function(){return o},R:function(){return a},S:function(){return h},U:function(){return d},a:function(){return c}});class r extends Error{constructor(e,t){let{cause:n,code:r,data:s}=t;if(!Number.isInteger(r))throw Error('"code" must be an integer.');if(!e||"string"!=typeof e)throw Error('"message" must be a nonempty string.');super(`${e}. Cause: ${JSON.stringify(n)}`),this.cause=n,this.code=r,this.data=s}}class s extends r{constructor(e,t){let{cause:n,code:r,data:s}=t;if(!(Number.isInteger(r)&&r>=1e3&&r<=4999))throw Error('"code" must be an integer such that: 1000 <= code <= 4999');super(e,{cause:n,code:r,data:s})}}class i extends Error{name="AddChainError";message="Error adding chain"}class o extends Error{name="ChainNotConfigured";constructor(e){let{chainId:t,connectorId:n}=e;super(`Chain "${t}" not configured for connector "${n}".`)}}class c extends Error{name="ConnectorNotFoundError";message="Connector not found"}class a extends r{name="ResourceUnavailable";constructor(e){super("Resource unavailable",{cause:e,code:-32002})}}class h extends s{name="SwitchChainError";constructor(e){super("Error switching chain",{cause:e,code:4902})}}class d extends s{name="UserRejectedRequestError";constructor(e){super("User rejected request",{cause:e,code:4001})}}},4646:function(e,t,n){n.d(t,{n:function(){return r}});function r(e){return"string"==typeof e?Number.parseInt(e,"0x"===e.trim().substring(0,2)?16:10):"bigint"==typeof e?Number(e):e}},35844:function(e,t,n){n.d(t,{BloctoConnector:function(){return u}});var r=n(40562),s=n(19485),i=n(241),o=n(16441),c=n(25137),a=n(83287),h=n(50610),d=n(4646);n(54146);class u extends a.W{id=c.w.blocto;name="Blocto";ready=!0;#e;#t;#n;#r;constructor(e){let{chains:t,options:n={}}=e;super({chains:t,options:n}),this.#t=this.onAccountsChanged.bind(this),this.#n=this.onChainChanged.bind(this),this.#r=this.onDisconnect.bind(this)}async connect(e){try{let t=await this.getProvider(e);this.setupListeners(),this.emit("message",{type:"connecting"});let n=await t.request({method:"eth_requestAccounts"}),r=s.getAddress(n[0]),i=await this.getChainId(),o=this.isChainUnsupported(i);return{account:r,chain:{id:i,unsupported:o},provider:t}}catch(e){if(this.#s(),this.#i(e))throw new h.U(e);throw e}}async disconnect(){let e=await this.getProvider();await e.request({method:"wallet_disconnect"}),this.removeListeners(),this.#s()}async getAccount(){let e=await this.getProvider(),t=await e.request({method:"eth_accounts"}),[n]=t||[];if(!n)throw Error("No accounts found");return n}async getChainId(){let e=await this.getProvider(),t=await e.request({method:"eth_chainId"});return(0,d.n)(t)}getProvider(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.#e){let t=e??this.options.chainId??this.chains[0].chainId,n=this.chains.find(e=>e.chainId===t)?.rpc[0];this.#e=new r.Z({ethereum:{chainId:t,rpc:n},appId:this.options.appId})?.ethereum}if(!this.#e)throw new h.a;return Promise.resolve(this.#e)}async getSigner(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},[t,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new i.Q(t,e).getSigner(n)}async isAuthorized(){return!!this.#e?._blocto?.sessionKey??!1}async switchChain(e){let t=await this.getProvider(),n=o.hexValue(e),r=this.chains.find(t=>t.chainId===e);if(!r)throw new h.S(Error("chain not found on connector."));let s=t._blocto.supportNetworkList[`${e}`];if(!s)throw new h.S(Error(`Blocto unsupported chain: ${n}`));try{return await t.request({method:"wallet_addEthereumChain",params:[{chainId:n,rpcUrls:[r?.rpc[0]??""]}]}),await t.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]}),r}catch(e){if(this.#i(e))throw new h.U(e);throw new h.S(e)}}onAccountsChanged(){}async onChainChanged(e){let t=(0,d.n)(e),n=this.isChainUnsupported(t),r=await this.getAccount();this.emit("change",{chain:{id:t,unsupported:n},account:r})}onDisconnect(){this.emit("disconnect")}async setupListeners(){let e=await this.getProvider();e.on("accountsChanged",this.#t),e.on("chainChanged",this.#n),e.on("disconnect",this.#r)}async removeListeners(){let e=await this.getProvider();e.off("accountsChanged",this.#t),e.off("chainChanged",this.#n),e.off("disconnect",this.#r)}#i(e){return/(user rejected)/i.test(e.message)}#s(){this.#e=void 0}}}}]);