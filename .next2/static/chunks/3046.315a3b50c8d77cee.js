"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3046],{83287:function(e,t,n){n.d(t,{W:function(){return r}});var i=n(6475),s=n(54146);class r extends s.Z{constructor(e){let{chains:t=i.gL9,options:n}=e;super(),this.chains=t,this.options=n}getBlockExplorerUrls(e){let t=e.explorers?.map(e=>e.url)??[];return t.length>0?t:void 0}isChainUnsupported(e){return!this.chains.some(t=>t.chainId===e)}updateChains(e){this.chains=e}}},50610:function(e,t,n){n.d(t,{A:function(){return r},C:function(){return o},R:function(){return a},S:function(){return h},U:function(){return d},a:function(){return c}});class i extends Error{constructor(e,t){let{cause:n,code:i,data:s}=t;if(!Number.isInteger(i))throw Error('"code" must be an integer.');if(!e||"string"!=typeof e)throw Error('"message" must be a nonempty string.');super(`${e}. Cause: ${JSON.stringify(n)}`),this.cause=n,this.code=i,this.data=s}}class s extends i{constructor(e,t){let{cause:n,code:i,data:s}=t;if(!(Number.isInteger(i)&&i>=1e3&&i<=4999))throw Error('"code" must be an integer such that: 1000 <= code <= 4999');super(e,{cause:n,code:i,data:s})}}class r extends Error{name="AddChainError";message="Error adding chain"}class o extends Error{name="ChainNotConfigured";constructor(e){let{chainId:t,connectorId:n}=e;super(`Chain "${t}" not configured for connector "${n}".`)}}class c extends Error{name="ConnectorNotFoundError";message="Connector not found"}class a extends i{name="ResourceUnavailable";constructor(e){super("Resource unavailable",{cause:e,code:-32002})}}class h extends s{name="SwitchChainError";constructor(e){super("Error switching chain",{cause:e,code:4902})}}class d extends s{name="UserRejectedRequestError";constructor(e){super("User rejected request",{cause:e,code:4001})}}},4646:function(e,t,n){n.d(t,{n:function(){return i}});function i(e){return"string"==typeof e?Number.parseInt(e,"0x"===e.trim().substring(0,2)?16:10):"bigint"==typeof e?Number(e):e}},95664:function(e,t,n){n.d(t,{_:function(){return d}});var i=n(50037),s=n(19485),r=n(241),o=n(16441),c=n(83287),a=n(50610),h=n(4646);n(54146);class d extends c.W{#e;shimDisconnectKey="injected.shimDisconnect";constructor(e){let t={shimDisconnect:!0,getProvider:()=>{if((0,i.a)(globalThis.window))return globalThis.window.ethereum},...e.options};super({chains:e.chains,options:t});let n=t.getProvider();if("string"==typeof t.name)this.name=t.name;else if(n){let e=function(e){if(!e)return"Injected";let t=e=>e.isAvalanche?"Core Wallet":e.isBitKeep?"BitKeep":e.isBraveWallet?"Brave Wallet":e.isCoinbaseWallet?"Coinbase Wallet":e.isExodus?"Exodus":e.isFrame?"Frame":e.isKuCoinWallet?"KuCoin Wallet":e.isMathWallet?"MathWallet":e.isOneInchIOSWallet||e.isOneInchAndroidWallet?"1inch Wallet":e.isOpera?"Opera":e.isPortal?"Ripio Portal":e.isTally?"Tally":e.isTokenPocket?"TokenPocket":e.isTokenary?"Tokenary":e.isTrust||e.isTrustWallet?"Trust Wallet":e.isMetaMask?"MetaMask":void 0;if(e.providers?.length){let n=new Set,i=1;for(let s of e.providers){let e=t(s);e||(e=`Unknown Wallet #${i}`,i+=1),n.add(e)}let s=[...n];return s.length?s:s[0]??"Injected"}return t(e)??"Injected"}(n);t.name?this.name=t.name(e):"string"==typeof e?this.name=e:this.name=e[0]}else this.name="Injected";this.id="injected",this.ready=!!n,this.connectorStorage=e.connectorStorage}async connect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let t=await this.getProvider();if(!t)throw new a.a;this.setupListeners(),this.emit("message",{type:"connecting"});let n=await t.request({method:"eth_requestAccounts"}),i=s.getAddress(n[0]),r=await this.getChainId(),o=this.isChainUnsupported(r);if(e.chainId&&r!==e.chainId)try{await this.switchChain(e.chainId),r=e.chainId,o=this.isChainUnsupported(e.chainId)}catch(t){console.error(`Could not switch to chain id: ${e.chainId}`,t)}this.options.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");let c={account:i,chain:{id:r,unsupported:o},provider:t};return this.emit("connect",c),c}catch(e){if(this.isUserRejectedRequestError(e))throw new a.U(e);if(-32002===e.code)throw new a.R(e);throw e}}async disconnect(){let e=await this.getProvider();e?.removeListener&&(e.removeListener("accountsChanged",this.onAccountsChanged),e.removeListener("chainChanged",this.onChainChanged),e.removeListener("disconnect",this.onDisconnect),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey))}async getAccount(){let e=await this.getProvider();if(!e)throw new a.a;return s.getAddress((await e.request({method:"eth_accounts"}))[0])}async getChainId(){let e=await this.getProvider();if(!e)throw new a.a;return e.request({method:"eth_chainId"}).then(h.n)}async getProvider(){let e=this.options.getProvider();return e&&(this.#e=e),this.#e}async getSigner(){let{chainId:e}=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},[t,n]=await Promise.all([this.getProvider(),this.getAccount()]);return new r.Q(t,e).getSigner(n)}async isAuthorized(){try{if(this.options.shimDisconnect&&!await this.connectorStorage.getItem(this.shimDisconnectKey))return!1;let e=await this.getProvider();if(!e)throw new a.a;let t=await this.getAccount();return!!t}catch{return!1}}async switchChain(e){let t=await this.getProvider();if(!t)throw new a.a;let n=o.hexValue(e);try{await t.request({method:"wallet_switchEthereumChain",params:[{chainId:n}]});let i=this.chains.find(t=>t.chainId===e);if(i)return i;return{chainId:e,name:`Chain ${n}`,slug:`${n}`,nativeCurrency:{name:"Ether",decimals:18,symbol:"ETH"},rpc:[""],chain:"",shortName:"",testnet:!0}}catch(s){let i=this.chains.find(t=>t.chainId===e);if(!i)throw new a.C({chainId:e,connectorId:this.id});if(4902===s.code||s?.data?.originalError?.code===4902)try{return await t.request({method:"wallet_addEthereumChain",params:[{chainId:n,chainName:i.name,nativeCurrency:i.nativeCurrency,rpcUrls:i.rpc,blockExplorerUrls:this.getBlockExplorerUrls(i)}]}),i}catch(e){if(this.isUserRejectedRequestError(e))throw new a.U(s);throw new a.A}if(this.isUserRejectedRequestError(s))throw new a.U(s);throw new a.S(s)}}async setupListeners(){let e=await this.getProvider();e.on&&(e.on("accountsChanged",this.onAccountsChanged),e.on("chainChanged",this.onChainChanged),e.on("disconnect",this.onDisconnect))}onAccountsChanged=async e=>{0===e.length?this.emit("disconnect"):this.emit("change",{account:s.getAddress(e[0])})};onChainChanged=e=>{let t=(0,h.n)(e),n=this.isChainUnsupported(t);this.emit("change",{chain:{id:t,unsupported:n}})};onDisconnect=async e=>{if(1013===e.code){let e=await this.getProvider();if(e){let e=await this.getAccount();if(e)return}}this.emit("disconnect"),this.options.shimDisconnect&&await this.connectorStorage.removeItem(this.shimDisconnectKey)};isUserRejectedRequestError(e){return 4001===e.code}}},3046:function(e,t,n){n.d(t,{MetaMaskConnector:function(){return a}});var i=n(50610),s=n(25137),r=n(95664),o=n(19485),c=n(36533);n(54146);class a extends r._{id=s.w.metamask;#t;constructor(e){let t={name:"MetaMask",shimDisconnect:!0,shimChainChangedDisconnect:!0,getProvider:c.g},n={...t,...e.options};super({chains:e.chains,options:n,connectorStorage:e.connectorStorage}),this.#t=n.UNSTABLE_shimOnConnectSelectAccount}async connect(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};try{let t=await this.getProvider();if(!t)throw new i.a;this.setupListeners(),this.emit("message",{type:"connecting"});let n=null;if(this.#t&&this.options?.shimDisconnect&&!this.connectorStorage.getItem(this.shimDisconnectKey)){n=await this.getAccount().catch(()=>null);let e=!!n;if(e)try{await t.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}catch(e){if(this.isUserRejectedRequestError(e))throw new i.U(e)}}if(!n){let e=await t.request({method:"eth_requestAccounts"});n=o.getAddress(e[0])}let s=await this.getChainId(),r=this.isChainUnsupported(s);if(e.chainId&&s!==e.chainId)try{await this.switchChain(e.chainId),s=e.chainId,r=this.isChainUnsupported(e.chainId)}catch(t){console.error(`Could not switch to chain id : ${e.chainId}`,t)}this.options?.shimDisconnect&&await this.connectorStorage.setItem(this.shimDisconnectKey,"true");let c={chain:{id:s,unsupported:r},provider:t,account:n};return this.emit("connect",c),c}catch(e){if(this.isUserRejectedRequestError(e))throw new i.U(e);if(-32002===e.code)throw new i.R(e);throw e}}async switchAccount(){let e=await this.getProvider();await e.request({method:"wallet_requestPermissions",params:[{eth_accounts:{}}]})}}}}]);